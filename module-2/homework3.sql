CREATE TABLE PESSOA (
  id_pessoa NUMBER NOT NULL,
  nome VARCHAR2(255) NULL,
  data_nascimento DATE,
  cpf VARCHAR2(11) NOT NULL,
  PRIMARY KEY(id_pessoa)
);

CREATE SEQUENCE SEQ_PESSOA
 START WITH     1
 INCREMENT BY   1
 NOCACHE
 NOCYCLE;


INSERT INTO VEMSER_WILLIAN.PESSOA
(ID_PESSOA, NOME, DATA_NASCIMENTO, CPF)
VALUES(SEQ_PESSOA.nextval, 'Maicon Machado Gerardi', TO_DATE('08-09-1991', 'dd-mm-yyyy'), '48863250090');

INSERT INTO PESSOA
(ID_PESSOA, NOME, DATA_NASCIMENTO, CPF)
VALUES(SEQ_PESSOA.nextval, 'Pedro Dantas', TO_DATE('08-09-1980', 'dd-mm-yyyy'), '29629873036');

INSERT INTO PESSOA
(ID_PESSOA, NOME, DATA_NASCIMENTO, CPF)
VALUES(SEQ_PESSOA.nextval, 'Bruna Da Silva', TO_DATE('06-01-1991', 'dd-mm-yyyy'), '01468462067');

INSERT INTO PESSOA
(ID_PESSOA, NOME, DATA_NASCIMENTO, CPF)
VALUES(SEQ_PESSOA.nextval, 'Fernanda Rosa', TO_DATE('06-05-1970', 'dd-mm-yyyy'), '01468462067');

------ contato

CREATE TABLE CONTATO (
  id_contato NUMBER NOT NULL,
  id_pessoa NUMBER NOT NULL,
  tipo NUMBER,
  numero VARCHAR2(14),
  descricao VARCHAR2(100),
  PRIMARY KEY(id_contato),
  CONSTRAINT FK_CONTATO_PESSOA FOREIGN KEY (id_pessoa) REFERENCES Pessoa (id_pessoa)
);

CREATE SEQUENCE SEQ_CONTATO
 START WITH     1
 INCREMENT BY   1
 NOCACHE
 NOCYCLE;

-- contatos do maicon
INSERT INTO CONTATO
(ID_CONTATO, ID_PESSOA, TIPO, NUMERO, DESCRICAO)
VALUES(SEQ_CONTATO.nextval, 1, 1, '51955565585', 'whatsapp');

INSERT INTO CONTATO
(ID_CONTATO, ID_PESSOA, TIPO, NUMERO, DESCRICAO)
VALUES(SEQ_CONTATO.nextval, 1, 2, '48335698566', 'trabalho');

-- contatos do pedro
INSERT INTO CONTATO
(ID_CONTATO, ID_PESSOA, TIPO, NUMERO, DESCRICAO)
VALUES(SEQ_CONTATO.nextval, 2, 1, '51955565585', 'celular');

INSERT INTO CONTATO
(ID_CONTATO, ID_PESSOA, TIPO, NUMERO, DESCRICAO)
VALUES(SEQ_CONTATO.nextval, 2, 2, '48335698566', 'casa');

-- contatos da bruna
INSERT INTO CONTATO
(ID_CONTATO, ID_PESSOA, TIPO, NUMERO, DESCRICAO)
VALUES(seq_contato.nextval, 3, 1, '51995866695', 'whatsapp');

-- contatos da bruna
INSERT INTO CONTATO
(ID_CONTATO, ID_PESSOA, TIPO, NUMERO, DESCRICAO)
VALUES(SEQ_CONTATO.nextval, 3, 1, '51995866695', 'whatsapp');

-- contatos da fernanda



------- endereço
CREATE TABLE ENDERECO_PESSOA (
  id_endereco NUMBER NOT NULL,
  tipo NUMBER NOT NULL,
  logradouro VARCHAR2(200) NOT NULL,
  numero NUMBER NOT NULL,
  complemento VARCHAR2(200) NULL,
  cep VARCHAR2(8) NOT NULL,
  cidade VARCHAR2(300) NOT NULL,
  estado VARCHAR2(100) NOT NULL,
  pais VARCHAR2(100) NOT NULL,
  PRIMARY KEY(id_endereco)
);

CREATE SEQUENCE SEQ_ENDERECO_CONTATO
 START WITH     1
 INCREMENT BY   1
 NOCACHE
 NOCYCLE;


INSERT INTO ENDERECO_PESSOA
(ID_ENDERECO, TIPO, LOGRADOURO, NUMERO, COMPLEMENTO, CEP, CIDADE, ESTADO, PAIS)
VALUES(SEQ_ENDERECO_CONTATO.nextval, 1, 'Rua José Dos Santos', 120, 'casa', '88080700', 'Florianópolis', 'SC', 'Brasil');

INSERT INTO ENDERECO_PESSOA
(ID_ENDERECO, TIPO, LOGRADOURO, NUMERO, COMPLEMENTO, CEP, CIDADE, ESTADO, PAIS)
VALUES(SEQ_ENDERECO_CONTATO.nextval, 2, 'Rua Pedro Canvas', 800, 'apto 2', '88805500', 'Porto Alegre', 'RS', 'Brasil');

INSERT INTO ENDERECO_PESSOA
(ID_ENDERECO, TIPO, LOGRADOURO, NUMERO, COMPLEMENTO, CEP, CIDADE, ESTADO, PAIS)
VALUES(SEQ_ENDERECO_CONTATO.nextval, 1, 'Rua Pedro Fantin', 800, 'apt 52', '88080700', 'Florianópolis', 'SC', 'Brasil');

INSERT INTO ENDERECO_PESSOA
(ID_ENDERECO, TIPO, LOGRADOURO, NUMERO, COMPLEMENTO, CEP, CIDADE, ESTADO, PAIS)
VALUES(SEQ_ENDERECO_CONTATO.nextval, 1, 'Rua Mario Quintana', 50, NULL, '88805800', 'Santos', 'SP', 'Brasil');

INSERT INTO ENDERECO_PESSOA
(ID_ENDERECO, TIPO, LOGRADOURO, NUMERO, COMPLEMENTO, CEP, CIDADE, ESTADO, PAIS)
VALUES(SEQ_ENDERECO_CONTATO.nextval, 2, 'Avenida Brasil', 1855, NULL, '88754566', 'Rio De Janeiro', 'RJ', 'Brasil');

INSERT INTO ENDERECO_PESSOA
(ID_ENDERECO, TIPO, LOGRADOURO, NUMERO, COMPLEMENTO, CEP, CIDADE, ESTADO, PAIS)
VALUES(SEQ_ENDERECO_CONTATO.nextval, 1, 'Avenida Luis Carvalho', 444, NULL, '88987788', 'Rio De Janeiro', 'RJ', 'Brasil');


CREATE TABLE PESSOA_X_PESSO_ENDERECO (
  id_pessoa NUMBER NOT NULL,
  id_endereco NUMBER NOT NULL,
  PRIMARY KEY(id_pessoa, id_endereco),
  CONSTRAINT FK_CE_PESSOA FOREIGN KEY (id_pessoa) REFERENCES Pessoa (id_pessoa),
  CONSTRAINT FK_CE_ENDERECO_PESSOA FOREIGN KEY (id_endereco) REFERENCES Endereco_Pessoa (id_endereco)
);

-- enderecos maicon
INSERT INTO PESSOA_X_PESSOA_ENDERECO
(ID_PESSOA, ID_ENDERECO)
VALUES(1, 1);

INSERT INTO PESSOA_X_PESSOA_ENDERECO
(ID_PESSOA, ID_ENDERECO)
VALUES(1, 2);

INSERT INTO PESSOA_X_PESSOA_ENDERECO
(ID_PESSOA, ID_ENDERECO)
VALUES(1, 3);

-- enderecos bruna
INSERT INTO PESSOA_X_PESSOA_ENDERECO
(ID_PESSOA, ID_ENDERECO)
VALUES(3, 3);

-- fernanda
INSERT INTO PESSOA_X_PESSOA_ENDERECO
(ID_PESSOA, ID_ENDERECO)
VALUES(4, 4);

INSERT INTO PESSOA_X_PESSOA_ENDERECO
(ID_PESSOA, ID_ENDERECO)
VALUES(4, 5);

-- ---------------------------------------------------------------
-- EXERCÍCIO 2;
------------------------------------------------------------------
    SELECT * 
      FROM PESSOA

    SELECT * 
      FROM PESSOA P 
CROSS JOIN CONTATO C 

    SELECT *
      FROM PESSOA P
INNER JOIN CONTATO C 
        ON P.ID_PESSOA = C.ID_CONTATO
	
    SELECT *
      FROM PESSOA P
INNER JOIN PESSOA_X_PESSOA_ENDERECO PXPE
        ON P.ID_PESSOA = PXPE.ID_PESSOA
INNER JOIN ENDERECO_PESSOA EP 
	    ON EP.ID_ENDERECO = PXPE.ID_ENDERECO
	
    SELECT *
      FROM PESSOA P
INNER JOIN CONTATO C
        ON P.ID_PESSOA = C.ID_PESSOA
INNER JOIN PESSOA_X_PESSOA_ENDERECO PXPE 
        ON P.ID_PESSOA = PXPE.ID_PESSOA
INNER JOIN ENDERECO_PESSOA EP 
        ON EP.ID_ENDERECO = PXPE.ID_ENDERECO
----------------------------------------------------------	
   SELECT *
     FROM PESSOA P
LEFT JOIN CONTATO C 
       ON P.ID_PESSOA = C.ID_CONTATO
	
   SELECT *
     FROM PESSOA P
LEFT JOIN PESSOA_X_PESSOA_ENDERECO PXPE
       ON P.ID_PESSOA = PXPE.ID_PESSOA
LEFT JOIN ENDERECO_PESSOA EP 
       ON EP.ID_ENDERECO = PXPE.ID_ENDERECO
	
   SELECT *
     FROM PESSOA P
LEFT JOIN CONTATO C
       ON P.ID_PESSOA = C.ID_PESSOA
LEFT JOIN PESSOA_X_PESSOA_ENDERECO PXPE
       ON P.ID_PESSOA = PXPE.ID_PESSOA
LEFT JOIN ENDERECO_PESSOA EP 
       ON EP.ID_ENDERECO = PXPE.ID_ENDERECO
	
---------------------------------------------------------
-- HOMEWORK3
       
-- 1) FAZER UM RIGHT OUTER JOIN ENTRE AS TABELAS;
          SELECT *
            FROM PESSOA P
RIGHT OUTER JOIN CONTATO C
              ON P.ID_PESSOA = C.ID_CONTATO

-- 2) FAZER UM RIGHT OUTER JOIN ENTRE PESSOA E PESSOA_X_PESSOA_ENDERECO E ENDERECO_PESSOA;
          SELECT *
            FROM PESSOA P
RIGHT OUTER JOIN PESSOA_X_PESSOA_ENDERECO PXPE
              ON P.ID_PESSOA = PXPE.ID_PESSOA
RIGHT OUTER JOIN ENDERECO_PESSOA EP
              ON EP.ID_ENDERECO = PXPE.ID_ENDERECO
-- 3) FAZER UM RIGHT OUTER JOIN ENTRE TODAS AS TABELAS COMEÇANDO POR PESSOA;
          SELECT *
            FROM PESSOA P
RIGHT OUTER JOIN CONTATO C
              ON P.ID_PESSOA = C.ID_PESSOA
RIGHT OUTER JOIN PESSOA_X_PESSOA_ENDERECO PXPE 
              ON P.ID_PESSOA = PXPE.ID_PESSOA
RIGHT OUTER JOIN ENDERECO_PESSOA EP 
              ON EP.ID_ENDERECO = PXPE.ID_ENDERECO
-- 4) FAZER UM FULL OUTER JOIN ENTRE PESSOA E CONTATO;
          SELECT *
            FROM PESSOA P
 FULL OUTER JOIN CONTATO C
              ON P.ID_PESSOA = C.ID_CONTATO
-- 5) FAZER UM FULL OUTER JOIN ENTRE PESSOA, PESSOA X PESSOA ENDERECO E ENDERECO PESSOA;
          SELECT *
            FROM PESSOA P
 FULL OUTER JOIN PESSOA_X_PESSOA_ENDERECO PXPE
              ON P.ID_PESSOA = PXPE.ID_PESSOA
 FULL OUTER JOIN ENDERECO_PESSOA EP
              ON EP.ID_ENDERECO = PXPE.ID_ENDERECO
-- 6) FAZER O FULL OUTER JOIN ENTRE TODAS AS TABELAS
          SELECT *
            FROM PESSOA P
       LEFT JOIN CONTATO C
              ON P.ID_PESSOA = C.ID_PESSOA
       LEFT JOIN PESSOA_X_PESSOA_ENDERECO PXPE
              ON P.ID_PESSOA = PXPE.ID_PESSOA
       LEFT JOIN ENDERECO_PESSOA EP 
              ON EP.ID_ENDERECO = PXPE.ID_ENDERECO
-- 7) FAZER UM EXISTS SELECIONANDO TODAS AS PESSOAS QUE TEM ENDEREÇO
SELECT *
FROM PESSOA P
WHERE EXISTS (SELECT *
			    FROM PESSOA_X_PESSOA_ENDERECO PXPE
			   WHERE P.ID_PESSOA = PXPE.ID_PESSOA
			     AND PXPE.ID_ENDERECO IS NOT NULL);
-- 8) SELECIONAR ID, NOME DA TABELA PESSOA, JUNTO COM ID, LOGRADOURO DA TABELA;
          SELECT 
	             P.ID_PESSOA,
	             P.NOME,
	             EP.ID_ENDERECO,
	             EP.LOGRADOURO  
            FROM PESSOA P
            JOIN PESSOA_X_PESSOA_ENDERECO PXPE
              ON P.ID_PESSOA = PXPE.ID_PESSOA 
            JOIN ENDERECO_PESSOA EP
              ON PXPE.ID_ENDERECO  = EP.ID_ENDERECO
